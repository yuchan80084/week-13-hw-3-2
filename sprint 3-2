#include <iostream>
#include <vector>
#include <ctime>
#include <Windows.h>
#include <fstream>
using namespace std;
int main() {
	int NI = 10, NO = 20, ni, no;
	vector <int> q;
	int NofPackets[120];
	ofstream xx("queuesize.txt");
	// enqueue
	for (int i = 0; i < 120; i++) {
		srand(time(0));
		ni = rand() % NI;
		no = rand() % NO;
		cout << "ni = " << ni << ", no = " << no << endl;
		for (int i = 0; i < ni; i++) {
			q.push_back(rand() % 20);
			cout << *(q.end() - 1) << " in " << q.size() << endl;

		}
		// dequeue
		if (q.size() == 0) cout << " empty queue\n";
		else {
			cout << "no     " << no << endl;
			for (int i = 0; i < no; i++) {
				cout << *q.begin();
				q.erase(q.begin());
				cout << " out " << q.size() << endl;
				if (q.size() == 0) break;

			}
		}
		NofPackets[i] = q.size();

		xx << i << " " << NofPackets[i] << endl;

		Sleep(100);
	}
	int total_packets = 0;
	int max_packet_size = 0;

	for (int i = 0; i < 120; i++) {
		total_packets += NofPackets[i];
		max_packet_size = max(max_packet_size, NofPackets[i]);
	}

	double average_packet_size = static_cast<double>(total_packets) / 120.0;

	cout << "평균 큐 크기: " << average_packet_size << endl;
	cout << "최대 큐 크기: " << max_packet_size << endl;

	xx.close();
	
	return 123;
}
